'use strict';

module.exports = {
  alicloud_actiontrail: 'Actiontrail',
  alicloud_alikafka_consumer_group: 'Alikafka',
  alicloud_alikafka_instance: 'Alikafka',
  alicloud_alikafka_sasl_acl: 'Alikafka',
  alicloud_alikafka_sasl_user: 'Alikafka',
  alicloud_alikafka_topic: 'Alikafka',
  alicloud_api_gateway_api: 'API Gateway',
  alicloud_api_gateway_app: 'API Gateway',
  alicloud_api_gateway_app_attachment: 'API Gateway',
  alicloud_api_gateway_group: 'API Gateway',
  alicloud_api_gateway_vpc_access: 'API Gateway',
  alicloud_cas_certificate: 'SSL Certificates',
  alicloud_cdn_domain: 'CDN',
  alicloud_cdn_domain_config: 'CDN',
  alicloud_cdn_domain_new: 'CDN',
  alicloud_cen_bandwidth_limit: 'Cloud Enterprise Network',
  alicloud_cen_bandwidth_package: 'Cloud Enterprise Network',
  alicloud_cen_bandwidth_package_attachment: 'Cloud Enterprise Network',
  alicloud_cen_instance: 'Cloud Enterprise Network',
  alicloud_cen_instance_attachment: 'Cloud Enterprise Network',
  alicloud_cen_instance_grant: 'Cloud Enterprise Network',
  alicloud_cen_route_entry: 'Cloud Enterprise Network',
  alicloud_cloud_connect_network: 'Cloud Connect Network',
  alicloud_cloud_connect_network_attachment: 'Cloud Connect Network',
  alicloud_cloud_connect_network_grant: 'Cloud Connect Network',
  alicloud_cms_alarm: 'Cloud Monitor',
  alicloud_common_bandwidth_package: 'VPC',
  alicloud_common_bandwidth_package_attachment: 'VPC',
  alicloud_container_cluster: 'Container Service',
  alicloud_cr_namespace: 'Container Registry',
  alicloud_cr_repo: 'Container Registry',
  alicloud_cs_application: 'Container Service',
  alicloud_cs_kubernetes: 'Container Service',
  alicloud_cs_kubernetes_autoscaler: 'Container Service',
  alicloud_cs_managed_kubernetes: 'Container Service',
  alicloud_cs_serverless_kubernetes: 'Container Service',
  alicloud_cs_swarm: 'Container Service',
  alicloud_datahub_project: 'Datahub Service',
  alicloud_datahub_subscription: 'Datahub Service',
  alicloud_datahub_topic: 'Datahub Service',
  alicloud_db_account: 'RDS',
  alicloud_db_account_privilege: 'RDS',
  alicloud_db_backup_policy: 'RDS',
  alicloud_db_connection: 'RDS',
  alicloud_db_database: 'RDS',
  alicloud_db_instance: 'RDS',
  alicloud_db_read_write_splitting_connection: 'RDS',
  alicloud_db_readonly_instance: 'RDS',
  alicloud_ddosbgp_instance: 'BGP-Line Anti-DDoS',
  alicloud_ddoscoo_instance: 'BGP-Line Anti-DDoS',
  alicloud_disk: 'ECS',
  alicloud_disk_attachment: 'ECS',
  alicloud_dns: 'DNS',
  alicloud_dns_group: 'DNS',
  alicloud_dns_record: 'DNS',
  alicloud_drds_instance: 'Distributed Relational Database Service',
  alicloud_eip: 'VPC',
  alicloud_eip_association: 'VPC',
  alicloud_elasticsearch: 'Elasticsearch',
  alicloud_emr_cluster: 'E-MapReduce',
  alicloud_ess_alarm: 'Auto Scaling',
  alicloud_ess_attachment: 'Auto Scaling',
  alicloud_ess_notification: 'Auto Scaling',
  alicloud_ess_scaling_configuration: 'Auto Scaling',
  alicloud_ess_scaling_group: 'Auto Scaling',
  alicloud_ess_scaling_lifecycle_hook: 'Auto Scaling',
  alicloud_ess_scaling_rule: 'Auto Scaling',
  alicloud_ess_scalinggroup_vserver_groups: 'Auto Scaling',
  alicloud_ess_schedule: 'Auto Scaling',
  alicloud_ess_scheduled_task: 'Auto Scaling',
  alicloud_fc_function: 'Function Compute Service',
  alicloud_fc_service: 'Function Compute Service',
  alicloud_fc_trigger: 'Function Compute Service',
  alicloud_forward_entry: 'VPC',
  alicloud_gpdb_connection: 'AnalyticDB for PostgreSQL',
  alicloud_gpdb_instance: 'AnalyticDB for PostgreSQL',
  alicloud_hbase_instance: 'HBase',
  alicloud_image: 'ECS',
  alicloud_image_copy: 'ECS',
  alicloud_image_export: 'ECS',
  alicloud_image_import: 'ECS',
  alicloud_image_share_permission: 'ECS',
  alicloud_instance: 'ECS',
  alicloud_key_pair: 'ECS',
  alicloud_key_pair_attachment: 'ECS',
  alicloud_kms_ciphertext: 'KMS',
  alicloud_kms_key: 'KMS',
  alicloud_kvstore_account: 'Redis And Memcache',
  alicloud_kvstore_backup_policy: 'Redis And Memcache',
  alicloud_kvstore_instance: 'Redis And Memcache',
  alicloud_launch_template: 'ECS',
  alicloud_log_machine_group: 'Log Service',
  alicloud_log_project: 'Log Service',
  alicloud_log_store: 'Log Service',
  alicloud_log_store_index: 'Log Service',
  alicloud_logtail_attachment: 'Log Service',
  alicloud_logtail_config: 'Log Service',
  alicloud_market_order: 'Market Place',
  alicloud_mns_queue: 'Message Notification Service',
  alicloud_mns_topic: 'Message Notification Service',
  alicloud_mns_topic_subscription: 'Message Notification Service',
  alicloud_mongodb_instance: 'MongoDB',
  alicloud_mongodb_sharding_instance: 'MongoDB',
  alicloud_nas_access_group: 'Network Attached Storage',
  alicloud_nas_access_rule: 'Network Attached Storage',
  alicloud_nas_file_system: 'Network Attached Storage',
  alicloud_nas_mount_target: 'Network Attached Storage',
  alicloud_nat_gateway: 'VPC',
  alicloud_network_acl: 'VPC',
  alicloud_network_acl_attachment: 'VPC',
  alicloud_network_acl_entries: 'VPC',
  alicloud_network_interface: 'ECS',
  alicloud_network_interface_attachment: 'ECS',
  alicloud_ons_group: 'RocketMQ',
  alicloud_ons_instance: 'RocketMQ',
  alicloud_ons_topic: 'RocketMQ',
  alicloud_oss_bucket: 'OSS',
  alicloud_oss_bucket_object: 'OSS',
  alicloud_ots_instance: 'Table Store',
  alicloud_ots_instance_attachment: 'Table Store',
  alicloud_ots_table: 'Table Store',
  alicloud_polardb_account: 'PolarDB',
  alicloud_polardb_account_privilege: 'PolarDB',
  alicloud_polardb_backup_policy: 'PolarDB',
  alicloud_polardb_cluster: 'PolarDB',
  alicloud_polardb_database: 'PolarDB',
  alicloud_polardb_endpoint_address: 'PolarDB',
  alicloud_pvtz_zone: 'Private Zone',
  alicloud_pvtz_zone_attachment: 'Private Zone',
  alicloud_pvtz_zone_record: 'Private Zone',
  alicloud_ram_access_key: 'RAM',
  alicloud_ram_account_alias: 'RAM',
  alicloud_ram_account_password_policy: 'RAM',
  alicloud_ram_alias: 'RAM',
  alicloud_ram_group: 'RAM',
  alicloud_ram_group_membership: 'RAM',
  alicloud_ram_group_policy_attachment: 'RAM',
  alicloud_ram_login_profile: 'RAM',
  alicloud_ram_policy: 'RAM',
  alicloud_ram_role: 'RAM',
  alicloud_ram_role_attachment: 'RAM',
  alicloud_ram_role_policy_attachment: 'RAM',
  alicloud_ram_user: 'RAM',
  alicloud_ram_user_policy_attachment: 'RAM',
  alicloud_reserved_instance: 'ECS',
  alicloud_route_entry: 'VPC',
  alicloud_route_table: 'VPC',
  alicloud_route_table_attachment: 'VPC',
  alicloud_router_interface: 'VPC',
  alicloud_router_interface_connection: 'VPC',
  alicloud_sag_acl: 'Smart Access Gateway',
  alicloud_sag_acl_rule: 'Smart Access Gateway',
  alicloud_sag_client_user: 'Smart Access Gateway',
  alicloud_sag_dnat_entry: 'Smart Access Gateway',
  alicloud_sag_qos: 'Smart Access Gateway',
  alicloud_sag_qos_car: 'Smart Access Gateway',
  alicloud_sag_qos_policy: 'Smart Access Gateway',
  alicloud_sag_snat_entry: 'Smart Access Gateway',
  alicloud_security_group: 'ECS',
  alicloud_security_group_rule: 'ECS',
  alicloud_slb: 'Server Load Balancer',
  alicloud_slb_acl: 'Server Load Balancer',
  alicloud_slb_attachment: 'Server Load Balancer',
  alicloud_slb_backend_server: 'Server Load Balancer',
  alicloud_slb_ca_certificate: 'Server Load Balancer',
  alicloud_slb_domain_extension: 'Server Load Balancer',
  alicloud_slb_listener: 'Server Load Balancer',
  alicloud_slb_master_slave_server_group: 'Server Load Balancer',
  alicloud_slb_rule: 'Server Load Balancer',
  alicloud_slb_server_certificate: 'Server Load Balancer',
  alicloud_slb_server_group: 'Server Load Balancer',
  alicloud_snapshot: 'ECS',
  alicloud_snapshot_policy: 'ECS',
  alicloud_snat: 'VPC',
  alicloud_ssl_vpn_client_cert: 'VPN',
  alicloud_ssl_vpn_server: 'VPN',
  alicloud_vpc: 'VPC',
  alicloud_vpn_connection: 'VPN',
  alicloud_vpn_customer_gateway: 'VPN',
  alicloud_vpn_gateway: 'VPN',
  alicloud_vpn_route_entry: 'VPN',
  alicloud_vswitch: 'VPC',
  alicloud_yundun_bastionhost_instance: 'Cloud Bastionhost',
  alicloud_yundun_dbaudit_instance: 'Cloud DBAudit',
  aws_accessanalyzer_analyzer: 'Access Analyzer',
  aws_acm_certificate: 'ACM',
  aws_acm_certificate_validation: 'ACM',
  aws_acmpca_certificate_authority: 'ACM PCA',
  aws_ami: 'EC2',
  aws_ami_copy: 'EC2',
  aws_ami_from_instance: 'EC2',
  aws_ami_launch_permission: 'EC2',
  aws_api_gateway_account: 'API Gateway',
  aws_api_gateway_api_key: 'API Gateway',
  aws_api_gateway_authorizer: 'API Gateway',
  aws_api_gateway_base_path_mapping: 'API Gateway',
  aws_api_gateway_client_certificate: 'API Gateway',
  aws_api_gateway_deployment: 'API Gateway',
  aws_api_gateway_documentation_part: 'API Gateway',
  aws_api_gateway_documentation_version: 'API Gateway',
  aws_api_gateway_domain_name: 'API Gateway',
  aws_api_gateway_gateway_response: 'API Gateway',
  aws_api_gateway_integration: 'API Gateway',
  aws_api_gateway_integration_response: 'API Gateway',
  aws_api_gateway_method: 'API Gateway',
  aws_api_gateway_method_response: 'API Gateway',
  aws_api_gateway_method_settings: 'API Gateway',
  aws_api_gateway_model: 'API Gateway',
  aws_api_gateway_request_validator: 'API Gateway',
  aws_api_gateway_resource: 'API Gateway',
  aws_api_gateway_rest_api: 'API Gateway',
  aws_api_gateway_stage: 'API Gateway',
  aws_api_gateway_usage_plan: 'API Gateway',
  aws_api_gateway_usage_plan_key: 'API Gateway',
  aws_api_gateway_vpc_link: 'API Gateway',
  aws_apigatewayv2_api: 'API Gateway Version 2 API',
  aws_apigatewayv2_api_mapping: 'API Gateway Version 2 API mapping',
  aws_apigatewayv2_authorizer: 'API Gateway Version 2 authorizer',
  aws_apigatewayv2_deployment: 'API Gateway Version 2 deployment',
  aws_apigatewayv2_domain_name: 'API Gateway Version 2 domain name',
  aws_apigatewayv2_integration: 'API Gateway Version 2 integration',
  aws_apigatewayv2_integration_response: 'API Gateway Version 2 integration',
  aws_apigatewayv2_model: 'API Gateway Version 2 model',
  aws_apigatewayv2_route: 'API Gateway Version 2 route',
  aws_apigatewayv2_route_response: 'API Gateway Version 2 route response',
  aws_apigatewayv2_stage: 'API Gateway Version 2 stage',
  aws_apigatewayv2_vpc_link: 'API Gateway Version 2 VPC Link',
  aws_app_cookie_stickiness_policy: 'Elastic Load Balancing',
  aws_appautoscaling_policy: 'Application Autoscaling',
  aws_appautoscaling_scheduled_action: 'Application Autoscaling',
  aws_appautoscaling_target: 'Application Autoscaling',
  aws_appmesh_mesh: 'AppMesh',
  aws_appmesh_route: 'AppMesh',
  aws_appmesh_virtual_node: 'AppMesh',
  aws_appmesh_virtual_router: 'AppMesh',
  aws_appmesh_virtual_service: 'AppMesh',
  aws_appsync_api_key: 'AppSync',
  aws_appsync_datasource: 'AppSync',
  aws_appsync_function: 'AppSync',
  aws_appsync_graphql_api: 'AppSync',
  aws_appsync_resolver: 'AppSync',
  aws_athena_database: 'Athena',
  aws_athena_named_query: 'Athena',
  aws_athena_workgroup: 'Athena',
  aws_autoscaling_attachment: 'Autoscaling',
  aws_autoscaling_group: 'Autoscaling',
  aws_autoscaling_lifecycle_hook: 'Autoscaling',
  aws_autoscaling_notification: 'Autoscaling',
  aws_autoscaling_policy: 'Autoscaling',
  aws_autoscaling_schedule: 'Autoscaling',
  aws_backup_plan: 'Backup',
  aws_backup_selection: 'Backup',
  aws_backup_vault: 'Backup',
  aws_batch_compute_environment: 'Batch',
  aws_batch_job_definition: 'Batch',
  aws_batch_job_queue: 'Batch',
  aws_budgets_budget: 'Budgets',
  aws_cloud9_environment_ec2: 'Cloud9',
  aws_cloudformation_stack: 'CloudFormation',
  aws_cloudformation_stack_set: 'CloudFormation',
  aws_cloudformation_stack_set_instance: 'CloudFormation',
  aws_cloudfront_distribution: 'CloudFront',
  aws_cloudfront_origin_access_identity: 'CloudFront',
  aws_cloudfront_public_key: 'CloudFront',
  aws_cloudhsm_v2_cluster: 'CloudHSM v2',
  aws_cloudhsm_v2_hsm: 'CloudHSM v2',
  aws_cloudtrail: 'CloudTrail',
  aws_cloudwatch_dashboard: 'CloudWatch',
  aws_cloudwatch_event_permission: 'CloudWatch',
  aws_cloudwatch_event_rule: 'CloudWatch',
  aws_cloudwatch_event_target: 'CloudWatch',
  aws_cloudwatch_log_destination: 'CloudWatch',
  aws_cloudwatch_log_destination_policy: 'CloudWatch',
  aws_cloudwatch_log_group: 'CloudWatch',
  aws_cloudwatch_log_metric_filter: 'CloudWatch',
  aws_cloudwatch_log_resource_policy: 'CloudWatch',
  aws_cloudwatch_log_stream: 'CloudWatch',
  aws_cloudwatch_log_subscription_filter: 'CloudWatch',
  aws_cloudwatch_metric_alarm: 'CloudWatch',
  aws_codebuild_project: 'CodeBuild',
  aws_codebuild_source_credential: 'CodeBuild',
  aws_codebuild_webhook: 'CodeBuild',
  aws_codecommit_repository: 'CodeCommit',
  aws_codecommit_trigger: 'CodeCommit',
  aws_codedeploy_app: 'CodeDeploy',
  aws_codedeploy_deployment_config: 'CodeDeploy',
  aws_codedeploy_deployment_group: 'CodeDeploy',
  aws_codepipeline: 'CodePipeline',
  aws_codepipeline_webhook: 'CodePipeline',
  aws_cognito_identity_pool: 'Cognito',
  aws_cognito_identity_pool_roles_attachment: 'Cognito',
  aws_cognito_identity_provider: 'Cognito',
  aws_cognito_resource_server: 'Cognito',
  aws_cognito_user_group: 'Cognito',
  aws_cognito_user_pool: 'Cognito',
  aws_cognito_user_pool_client: 'Cognito',
  aws_cognito_user_pool_domain: 'Cognito',
  aws_config_aggregate_authorization: 'Config',
  aws_config_config_rule: 'Config',
  aws_config_configuration_aggregator: 'Config',
  aws_config_configuration_recorder: 'Config',
  aws_config_configuration_recorder_status: 'Config',
  aws_config_delivery_channel: 'Config',
  aws_config_organization_custom_rule: 'Config',
  aws_config_organization_managed_rule: 'Config',
  aws_cur_report_definition: 'Cost and Usage Report',
  aws_customer_gateway: 'VPC',
  aws_datapipeline_pipeline: 'DataPipeline',
  aws_datasync_agent: 'DataSync',
  aws_datasync_location_efs: 'DataSync',
  aws_datasync_location_nfs: 'DataSync',
  aws_datasync_location_s3: 'DataSync',
  aws_datasync_task: 'DataSync',
  aws_dax_cluster: 'DynamoDB Accelerator',
  aws_dax_parameter_group: 'DynamoDB Accelerator',
  aws_dax_subnet_group: 'DynamoDB Accelerator',
  aws_db_cluster_snapshot: 'RDS',
  aws_db_event_subscription: 'RDS',
  aws_db_instance: 'RDS',
  aws_db_instance_role_association: 'RDS',
  aws_db_option_group: 'RDS',
  aws_db_parameter_group: 'RDS',
  aws_db_security_group: 'RDS',
  aws_db_snapshot: 'RDS',
  aws_db_subnet_group: 'RDS',
  aws_default_network_acl: 'VPC',
  aws_default_route_table: 'VPC',
  aws_default_security_group: 'VPC',
  aws_default_subnet: 'VPC',
  aws_default_vpc: 'VPC',
  aws_default_vpc_dhcp_options: 'VPC',
  aws_devicefarm_project: 'Device Farm',
  aws_directory_service_conditional_forwarder: 'Directory Service',
  aws_directory_service_directory: 'Directory Service',
  aws_directory_service_log_subscription: 'Directory Service',
  aws_dlm_lifecycle_policy: 'Data Lifecycle Manager',
  aws_dms_certificate: 'Database Migration Service',
  aws_dms_endpoint: 'Database Migration Service',
  aws_dms_replication_instance: 'Database Migration Service',
  aws_dms_replication_subnet_group: 'Database Migration Service',
  aws_dms_replication_task: 'Database Migration Service',
  aws_docdb_cluster: 'DocumentDB',
  aws_docdb_cluster_instance: 'DocumentDB',
  aws_docdb_cluster_parameter_group: 'DocumentDB',
  aws_docdb_cluster_snapshot: 'DocumentDB',
  aws_docdb_subnet_group: 'DocumentDB',
  aws_dx_bgp_peer: 'Direct Connect',
  aws_dx_connection: 'Direct Connect',
  aws_dx_connection_association: 'Direct Connect',
  aws_dx_gateway: 'Direct Connect',
  aws_dx_gateway_association: 'Direct Connect',
  aws_dx_gateway_association_proposal: 'Direct Connect',
  aws_dx_hosted_private_virtual_interface: 'Direct Connect',
  aws_dx_hosted_private_virtual_interface_accepter: 'Direct Connect',
  aws_dx_hosted_public_virtual_interface: 'Direct Connect',
  aws_dx_hosted_public_virtual_interface_accepter: 'Direct Connect',
  aws_dx_hosted_transit_virtual_interface: 'Direct Connect',
  aws_dx_hosted_transit_virtual_interface_accepter: 'Direct Connect',
  aws_dx_lag: 'Direct Connect',
  aws_dx_private_virtual_interface: 'Direct Connect',
  aws_dx_public_virtual_interface: 'Direct Connect',
  aws_dx_transit_virtual_interface: 'Direct Connect',
  aws_dynamodb_global_table: 'DynamoDB',
  aws_dynamodb_table: 'DynamoDB',
  aws_dynamodb_table_item: 'DynamoDB',
  aws_ebs_default_kms_key: 'EC2',
  aws_ebs_encryption_by_default: 'EC2',
  aws_ebs_snapshot: 'EC2',
  aws_ebs_snapshot_copy: 'EC2',
  aws_ebs_volume: 'EC2',
  aws_ec2_capacity_reservation: 'EC2',
  aws_ec2_client_vpn_endpoint: 'EC2',
  aws_ec2_client_vpn_network_association: 'EC2',
  aws_ec2_fleet: 'EC2',
  aws_ec2_transit_gateway: 'EC2',
  aws_ec2_transit_gateway_route: 'EC2',
  aws_ec2_transit_gateway_route_table: 'EC2',
  aws_ec2_transit_gateway_route_table_association: 'EC2',
  aws_ec2_transit_gateway_route_table_propagation: 'EC2',
  aws_ec2_transit_gateway_vpc_attachment: 'EC2',
  aws_ec2_transit_gateway_vpc_attachment_accepter: 'EC2',
  aws_ecr_lifecycle_policy: 'ECR',
  aws_ecr_repository: 'ECR',
  aws_ecr_repository_policy: 'ECR',
  aws_ecs_capacity_provider: 'ECS',
  aws_ecs_cluster: 'ECS',
  aws_ecs_service: 'ECS',
  aws_ecs_task_definition: 'ECS',
  aws_efs_file_system: 'EFS',
  aws_efs_mount_target: 'EFS',
  aws_egress_only_internet_gateway: 'VPC',
  aws_eip: 'EC2',
  aws_eip_association: 'EC2',
  aws_eks_cluster: 'EKS',
  aws_eks_fargate_profile: 'EKS',
  aws_eks_node_group: 'EKS',
  aws_elastic_beanstalk_application: 'Elastic Beanstalk',
  aws_elastic_beanstalk_application_version: 'Elastic Beanstalk',
  aws_elastic_beanstalk_configuration_template: 'Elastic Beanstalk',
  aws_elastic_beanstalk_environment: 'Elastic Beanstalk',
  aws_elasticache_cluster: 'ElastiCache',
  aws_elasticache_parameter_group: 'ElastiCache',
  aws_elasticache_replication_group: 'ElastiCache',
  aws_elasticache_security_group: 'ElastiCache',
  aws_elasticache_subnet_group: 'ElastiCache',
  aws_elasticsearch_domain: 'ElasticSearch',
  aws_elasticsearch_domain_policy: 'ElasticSearch',
  aws_elastictranscoder_pipeline: 'Elastic Transcoder',
  aws_elastictranscoder_preset: 'Elastic Transcoder',
  aws_elb: 'Elastic Load Balancing',
  aws_elb_attachment: 'Elastic Load Balancing',
  aws_emr_cluster: 'Elastic Map Reduce',
  aws_emr_instance_group: 'Elastic Map Reduce',
  aws_emr_security_configuration: 'Elastic Map Reduce',
  aws_flow_log: 'VPC',
  aws_fms_admin_account: 'Firewall Manager',
  aws_fsx_lustre_file_system: 'File System',
  aws_fsx_windows_file_system: 'File System',
  aws_gamelift_alias: 'Gamelift',
  aws_gamelift_build: 'Gamelift',
  aws_gamelift_fleet: 'Gamelift',
  aws_gamelift_game_session_queue: 'Gamelift',
  aws_glacier_vault: 'Glacier',
  aws_glacier_vault_lock: 'Glacier',
  aws_globalaccelerator_accelerator: 'Global Accelerator',
  aws_globalaccelerator_endpoint_group: 'Global Accelerator',
  aws_globalaccelerator_listener: 'Global Accelerator',
  aws_glue_catalog_database: 'Glue',
  aws_glue_catalog_table: 'Glue',
  aws_glue_classifier: 'Glue',
  aws_glue_connection: 'Glue',
  aws_glue_crawler: 'Glue',
  aws_glue_job: 'Glue',
  aws_glue_security_configuration: 'Glue',
  aws_glue_trigger: 'Glue',
  aws_glue_workflow: 'Glue',
  aws_guardduty_detector: 'GuardDuty',
  aws_guardduty_invite_accepter: 'GuardDuty',
  aws_guardduty_ipset: 'GuardDuty',
  aws_guardduty_member: 'GuardDuty',
  aws_guardduty_threatintelset: 'GuardDuty',
  aws_iam_access_key: 'IAM',
  aws_iam_account_alias: 'IAM',
  aws_iam_account_password_policy: 'IAM',
  aws_iam_group: 'IAM',
  aws_iam_group_membership: 'IAM',
  aws_iam_group_policy: 'IAM',
  aws_iam_group_policy_attachment: 'IAM',
  aws_iam_instance_profile: 'IAM',
  aws_iam_openid_connect_provider: 'IAM',
  aws_iam_policy: 'IAM',
  aws_iam_policy_attachment: 'IAM',
  aws_iam_role: 'IAM',
  aws_iam_role_policy: 'IAM',
  aws_iam_role_policy_attachment: 'IAM',
  aws_iam_saml_provider: 'IAM',
  aws_iam_server_certificate: 'IAM',
  aws_iam_service_linked_role: 'IAM',
  aws_iam_user: 'IAM',
  aws_iam_user_group_membership: 'IAM',
  aws_iam_user_login_profile: 'IAM',
  aws_iam_user_policy: 'IAM',
  aws_iam_user_policy_attachment: 'IAM',
  aws_iam_user_ssh_key: 'IAM',
  aws_inspector_assessment_target: 'Inspector',
  aws_inspector_assessment_template: 'Inspector',
  aws_inspector_resource_group: 'Inspector',
  aws_instance: 'EC2',
  aws_internet_gateway: 'VPC',
  aws_iot_certificate: 'IoT',
  aws_iot_policy: 'IoT',
  aws_iot_policy_attachment: 'IoT',
  aws_iot_role_alias: 'IoT',
  aws_iot_thing: 'IoT',
  aws_iot_thing_principal_attachment: 'IoT',
  aws_iot_thing_type: 'IoT',
  aws_iot_topic_rule: 'IoT',
  aws_key_pair: 'EC2',
  aws_kinesis_analytics_application: 'Kinesis',
  aws_kinesis_firehose_delivery_stream: 'Kinesis Firehose',
  aws_kinesis_stream: 'Kinesis',
  aws_kms_alias: 'KMS',
  aws_kms_ciphertext: 'KMS',
  aws_kms_external_key: 'KMS',
  aws_kms_grant: 'KMS',
  aws_kms_key: 'KMS',
  aws_lambda_alias: 'Lambda',
  aws_lambda_event_source_mapping: 'Lambda',
  aws_lambda_function: 'Lambda',
  aws_lambda_function_event_invoke_config: 'Lambda',
  aws_lambda_layer_version: 'Lambda',
  aws_lambda_permission: 'Lambda',
  aws_lambda_provisioned_concurrency_config: 'Lambda',
  aws_launch_configuration: 'EC2',
  aws_launch_template: 'EC2',
  aws_lb: 'Elastic Load Balancing v2',
  aws_lb_cookie_stickiness_policy: 'Elastic Load Balancing',
  aws_lb_listener: 'Elastic Load Balancing v2',
  aws_lb_listener_certificate: 'Elastic Load Balancing v2',
  aws_lb_listener_rule: 'Elastic Load Balancing v2',
  aws_lb_ssl_negotiation_policy: 'Elastic Load Balancing',
  aws_lb_target_group: 'Elastic Load Balancing v2',
  aws_lb_target_group_attachment: 'Elastic Load Balancing v2',
  aws_licensemanager_association: 'License Manager',
  aws_licensemanager_license_configuration: 'License Manager',
  aws_lightsail_domain: 'Lightsail',
  aws_lightsail_instance: 'Lightsail',
  aws_lightsail_key_pair: 'Lightsail',
  aws_lightsail_static_ip: 'Lightsail',
  aws_lightsail_static_ip_attachment: 'Lightsail',
  aws_load_balancer_backend_server_policy: 'Elastic Load Balancing',
  aws_load_balancer_listener_policy: 'Elastic Load Balancing',
  aws_load_balancer_policy: 'Elastic Load Balancing',
  aws_macie_member_account_association: 'Macie',
  aws_macie_s3_bucket_association: 'Macie',
  aws_main_route_table_association: 'VPC',
  aws_media_convert_queue: 'MediaConvert',
  aws_media_package_channel: 'MediaPackage',
  aws_media_store_container: 'MediaStore',
  aws_media_store_container_policy: 'MediaStore',
  aws_mq_broker: 'MQ',
  aws_mq_configuration: 'MQ',
  aws_msk_cluster: 'Managed Streaming for Kafka',
  aws_msk_configuration: 'Managed Streaming for Kafka',
  aws_nat_gateway: 'VPC',
  aws_neptune_cluster: 'Neptune',
  aws_neptune_cluster_instance: 'Neptune',
  aws_neptune_cluster_parameter_group: 'Neptune',
  aws_neptune_cluster_snapshot: 'Neptune',
  aws_neptune_event_subscription: 'Neptune',
  aws_neptune_parameter_group: 'Neptune',
  aws_neptune_subnet_group: 'Neptune',
  aws_network_acl: 'VPC',
  aws_network_acl_rule: 'VPC',
  aws_network_interface: 'VPC',
  aws_network_interface_attachment: 'VPC',
  aws_network_interface_sg_attachment: 'VPC',
  aws_opsworks_application: 'OpsWorks',
  aws_opsworks_custom_layer: 'OpsWorks',
  aws_opsworks_ganglia_layer: 'OpsWorks',
  aws_opsworks_haproxy_layer: 'OpsWorks',
  aws_opsworks_instance: 'OpsWorks',
  aws_opsworks_java_app_layer: 'OpsWorks',
  aws_opsworks_memcached_layer: 'OpsWorks',
  aws_opsworks_mysql_layer: 'OpsWorks',
  aws_opsworks_nodejs_app_layer: 'OpsWorks',
  aws_opsworks_permission: 'OpsWorks',
  aws_opsworks_php_app_layer: 'OpsWorks',
  aws_opsworks_rails_app_layer: 'OpsWorks',
  aws_opsworks_rds_db_instance: 'OpsWorks',
  aws_opsworks_stack: 'OpsWorks',
  aws_opsworks_static_web_layer: 'OpsWorks',
  aws_opsworks_user_profile: 'OpsWorks',
  aws_organizations_account: 'Organizations',
  aws_organizations_organization: 'Organizations',
  aws_organizations_organizational_unit: 'Organizations',
  aws_organizations_policy: 'Organizations',
  aws_organizations_policy_attachment: 'Organizations',
  aws_pinpoint_adm_channel: 'Pinpoint',
  aws_pinpoint_apns_channel: 'Pinpoint',
  aws_pinpoint_apns_sandbox_channel: 'Pinpoint',
  aws_pinpoint_apns_voip_channel: 'Pinpoint',
  aws_pinpoint_apns_voip_sandbox_channel: 'Pinpoint',
  aws_pinpoint_app: 'Pinpoint',
  aws_pinpoint_baidu_channel: 'Pinpoint',
  aws_pinpoint_email_channel: 'Pinpoint',
  aws_pinpoint_event_stream: 'Pinpoint',
  aws_pinpoint_gcm_channel: 'Pinpoint',
  aws_pinpoint_sms_channel: 'Pinpoint',
  aws_placement_group: 'EC2',
  aws_proxy_protocol_policy: 'Elastic Load Balancing',
  aws_qldb_ledger: 'Quantum Ledger Database',
  aws_quicksight_group: 'QuickSight',
  aws_quicksight_user: 'QuickSight',
  aws_ram_principal_association: 'RAM',
  aws_ram_resource_association: 'RAM',
  aws_ram_resource_share: 'RAM',
  aws_ram_resource_share_accepter: 'RAM',
  aws_rds_cluster: 'RDS',
  aws_rds_cluster_endpoint: 'RDS',
  aws_rds_cluster_instance: 'RDS',
  aws_rds_cluster_parameter_group: 'RDS',
  aws_rds_global_cluster: 'RDS',
  aws_redshift_cluster: 'Redshift',
  aws_redshift_event_subscription: 'Redshift',
  aws_redshift_parameter_group: 'Redshift',
  aws_redshift_security_group: 'Redshift',
  aws_redshift_snapshot_copy_grant: 'Redshift',
  aws_redshift_snapshot_schedule: 'Redshift',
  aws_redshift_snapshot_schedule_association: 'Redshift',
  aws_redshift_subnet_group: 'Redshift',
  aws_resourcegroups_group: 'Resource Groups',
  aws_route: 'VPC',
  aws_route53_delegation_set: 'Route53',
  aws_route53_health_check: 'Route53',
  aws_route53_query_log: 'Route53',
  aws_route53_record: 'Route53',
  aws_route53_resolver_endpoint: 'Route53 Resolver',
  aws_route53_resolver_rule: 'Route53 Resolver',
  aws_route53_resolver_rule_association: 'Route53 Resolver',
  aws_route53_zone: 'Route53',
  aws_route53_zone_association: 'Route53',
  aws_route_table: 'VPC',
  aws_route_table_association: 'VPC',
  aws_s3_account_public_access_block: 'S3',
  aws_s3_bucket: 'S3',
  aws_s3_bucket_inventory: 'S3',
  aws_s3_bucket_metric: 'S3',
  aws_s3_bucket_notification: 'S3',
  aws_s3_bucket_object: 'S3',
  aws_s3_bucket_policy: 'S3',
  aws_s3_bucket_public_access_block: 'S3',
  aws_sagemaker_endpoint: 'Sagemaker',
  aws_sagemaker_endpoint_configuration: 'Sagemaker',
  aws_sagemaker_model: 'Sagemaker',
  aws_sagemaker_notebook_instance: 'Sagemaker',
  aws_sagemaker_notebook_instance_lifecycle_configuration: 'Sagemaker',
  aws_secretsmanager_secret: 'Secrets Manager',
  aws_secretsmanager_secret_version: 'Secrets Manager',
  aws_security_group: 'VPC',
  aws_security_group_rule: 'VPC',
  aws_securityhub_account: 'Security Hub',
  aws_securityhub_product_subscription: 'Security Hub',
  aws_securityhub_standards_subscription: 'Security Hub',
  aws_service_discovery_http_namespace: 'Service Discovery',
  aws_service_discovery_private_dns_namespace: 'Service Discovery',
  aws_service_discovery_public_dns_namespace: 'Service Discovery',
  aws_service_discovery_service: 'Service Discovery',
  aws_servicecatalog_portfolio: 'Service Catalog',
  aws_servicequotas_service_quota: 'Service Quotas',
  aws_ses_active_receipt_rule_set: 'SES',
  aws_ses_configuration_set: 'SES',
  aws_ses_domain_dkim: 'SES',
  aws_ses_domain_identity: 'SES',
  aws_ses_domain_identity_verification: 'SES',
  aws_ses_domain_mail_from: 'SES',
  aws_ses_email_identity: 'SES',
  aws_ses_event_destination: 'SES',
  aws_ses_identity_notification_topic: 'SES',
  aws_ses_identity_policy: 'SES',
  aws_ses_receipt_filter: 'SES',
  aws_ses_receipt_rule: 'SES',
  aws_ses_receipt_rule_set: 'SES',
  aws_ses_template: 'SES',
  aws_sfn_activity: 'Step Function',
  aws_sfn_state_machine: 'Step Function',
  aws_shield_protection: 'Shield',
  aws_simpledb_domain: 'SimpleDB',
  aws_snapshot_create_volume_permission: 'EC2',
  aws_sns_platform_application: 'SNS',
  aws_sns_sms_preferences: 'SNS',
  aws_sns_topic: 'SNS',
  aws_sns_topic_policy: 'SNS',
  aws_sns_topic_subscription: 'SNS',
  aws_spot_datafeed_subscription: 'EC2',
  aws_spot_fleet_request: 'EC2',
  aws_spot_instance_request: 'EC2',
  aws_sqs_queue: 'SQS',
  aws_sqs_queue_policy: 'SQS',
  aws_ssm_activation: 'SSM',
  aws_ssm_association: 'SSM',
  aws_ssm_document: 'SSM',
  aws_ssm_maintenance_window: 'SSM',
  aws_ssm_maintenance_window_target: 'SSM',
  aws_ssm_maintenance_window_task: 'SSM',
  aws_ssm_parameter: 'SSM',
  aws_ssm_patch_baseline: 'SSM',
  aws_ssm_patch_group: 'SSM',
  aws_ssm_resource_data_sync: 'SSM',
  aws_storagegateway_cache: 'Storage Gateway',
  aws_storagegateway_cached_iscsi_volume: 'Storage Gateway',
  aws_storagegateway_gateway: 'Storage Gateway',
  aws_storagegateway_nfs_file_share: 'Storage Gateway',
  aws_storagegateway_smb_file_share: 'Storage Gateway',
  aws_storagegateway_upload_buffer: 'Storage Gateway',
  aws_storagegateway_working_storage: 'Storage Gateway',
  aws_subnet: 'VPC',
  aws_swf_domain: 'SWF',
  aws_transfer_server: 'Transfer',
  aws_transfer_ssh_key: 'Transfer',
  aws_transfer_user: 'Transfer',
  aws_volume_attachment: 'EC2',
  aws_vpc: 'VPC',
  aws_vpc_dhcp_options: 'VPC',
  aws_vpc_dhcp_options_association: 'VPC',
  aws_vpc_endpoint: 'VPC',
  aws_vpc_endpoint_connection_notification: 'VPC',
  aws_vpc_endpoint_route_table_association: 'VPC',
  aws_vpc_endpoint_service: 'VPC',
  aws_vpc_endpoint_service_allowed_principal: 'VPC',
  aws_vpc_endpoint_subnet_association: 'VPC',
  aws_vpc_ipv4_cidr_block_association: 'VPC',
  aws_vpc_peering_connection: 'VPC',
  aws_vpc_peering_connection_accepter: 'VPC',
  aws_vpc_peering_connection_options: 'VPC',
  aws_vpn_connection: 'VPC',
  aws_vpn_connection_route: 'VPC',
  aws_vpn_gateway: 'VPC',
  aws_vpn_gateway_attachment: 'VPC',
  aws_vpn_gateway_route_propagation: 'VPC',
  aws_waf_byte_match_set: 'WAF',
  aws_waf_geo_match_set: 'WAF',
  aws_waf_ipset: 'WAF',
  aws_waf_rate_based_rule: 'WAF',
  aws_waf_regex_match_set: 'WAF',
  aws_waf_regex_pattern_set: 'WAF',
  aws_waf_rule: 'WAF',
  aws_waf_rule_group: 'WAF',
  aws_waf_size_constraint_set: 'WAF',
  aws_waf_sql_injection_match_set: 'WAF',
  aws_waf_web_acl: 'WAF',
  aws_waf_xss_match_set: 'WAF',
  aws_wafregional_byte_match_set: 'WAF Regional',
  aws_wafregional_geo_match_set: 'WAF Regional',
  aws_wafregional_ipset: 'WAF Regional',
  aws_wafregional_rate_based_rule: 'WAF Regional',
  aws_wafregional_regex_match_set: 'WAF Regional',
  aws_wafregional_regex_pattern_set: 'WAF Regional',
  aws_wafregional_rule: 'WAF Regional',
  aws_wafregional_rule_group: 'WAF Regional',
  aws_wafregional_size_constraint_set: 'WAF Regional',
  aws_wafregional_sql_injection_match_set: 'WAF Regional',
  aws_wafregional_web_acl: 'WAF Regional',
  aws_wafregional_web_acl_association: 'WAF Regional',
  aws_wafregional_xss_match_set: 'WAF Regional',
  aws_worklink_fleet: 'WorkLink',
  aws_worklink_website_certificate_authority_association: 'WorkLink',
  aws_workspaces_directory: 'WorkSpaces',
  aws_workspaces_ip_group: 'WorkSpaces',
  aws_xray_sampling_rule: 'XRay',
  azurerm_advanced_threat_protection: 'Security Center',
  azurerm_analysis_services_server: 'Analysis Services',
  azurerm_api_management: 'API Management',
  azurerm_api_management_api: 'API Management',
  azurerm_api_management_api_operation: 'API Management',
  azurerm_api_management_api_operation_policy: 'API Management',
  azurerm_api_management_api_policy: 'API Management',
  azurerm_api_management_api_schema: 'API Management',
  azurerm_api_management_api_version_set: 'API Management',
  azurerm_api_management_authorization_server: 'API Management',
  azurerm_api_management_backend: 'API Management',
  azurerm_api_management_certificate: 'API Management',
  azurerm_api_management_diagnostic: 'API Management',
  azurerm_api_management_group: 'API Management',
  azurerm_api_management_group_user: 'API Management',
  azurerm_api_management_identity_provider_aad: 'API Management',
  azurerm_api_management_identity_provider_facebook: 'API Management',
  azurerm_api_management_identity_provider_google: 'API Management',
  azurerm_api_management_identity_provider_microsoft: 'API Management',
  azurerm_api_management_identity_provider_twitter: 'API Management',
  azurerm_api_management_logger: 'API Management',
  azurerm_api_management_openid_connect_provider: 'API Management',
  azurerm_api_management_product: 'API Management',
  azurerm_api_management_product_api: 'API Management',
  azurerm_api_management_product_group: 'API Management',
  azurerm_api_management_product_policy: 'API Management',
  azurerm_api_management_property: 'API Management',
  azurerm_api_management_subscription: 'API Management',
  azurerm_api_management_user: 'API Management',
  azurerm_app_configuration: 'App Configuration',
  azurerm_app_service: 'App Service',
  azurerm_app_service_active_slot: 'App Service',
  azurerm_app_service_certificate: 'App Service',
  azurerm_app_service_certificate_order: 'App Service',
  azurerm_app_service_custom_hostname_binding: 'App Service',
  azurerm_app_service_plan: 'App Service',
  azurerm_app_service_slot: 'App Service',
  azurerm_app_service_source_control_token: 'App Service',
  azurerm_app_service_virtual_network_association: 'App Service',
  azurerm_application_gateway: 'Network',
  azurerm_application_insights: 'Application Insights',
  azurerm_application_insights_analytics_item: 'Application Insights',
  azurerm_application_insights_api_key: 'Application Insights',
  azurerm_application_insights_web_test: 'Application Insights',
  azurerm_application_security_group: 'Network',
  azurerm_automation_account: 'Automation',
  azurerm_automation_certificate: 'Automation',
  azurerm_automation_credential: 'Automation',
  azurerm_automation_dsc_configuration: 'Automation',
  azurerm_automation_dsc_nodeconfiguration: 'Automation',
  azurerm_automation_job_schedule: 'Automation',
  azurerm_automation_module: 'Automation',
  azurerm_automation_runbook: 'Automation',
  azurerm_automation_schedule: 'Automation',
  azurerm_automation_variable_bool: 'Automation',
  azurerm_automation_variable_datetime: 'Automation',
  azurerm_automation_variable_int: 'Automation',
  azurerm_automation_variable_string: 'Automation',
  azurerm_autoscale_setting: 'Monitor',
  azurerm_availability_set: 'Compute',
  azurerm_azuread_application: 'Azure Active Directory',
  azurerm_azuread_service_principal: 'Azure Active Directory',
  azurerm_azuread_service_principal_password: 'Azure Active Directory',
  azurerm_backup_container_storage_account: 'Recovery Services',
  azurerm_backup_policy_file_share: 'Recovery Services',
  azurerm_backup_policy_vm: 'Recovery Services',
  azurerm_backup_protected_file_share: 'Recovery Services',
  azurerm_backup_protected_vm: 'Recovery Services',
  azurerm_bastion_host: 'Network',
  azurerm_batch_account: 'Batch',
  azurerm_batch_application: 'Batch',
  azurerm_batch_certificate: 'Batch',
  azurerm_batch_pool: 'Batch',
  azurerm_bot_channel_email: 'Bot',
  azurerm_bot_channel_ms_teams: 'Bot',
  azurerm_bot_channel_slack: 'Bot',
  azurerm_bot_channels_registration: 'Bot',
  azurerm_bot_connection: 'Bot',
  azurerm_bot_web_app: 'Bot',
  azurerm_cdn_endpoint: 'CDN',
  azurerm_cdn_profile: 'CDN',
  azurerm_cognitive_account: 'Cognitive Services',
  azurerm_connection_monitor: 'Network',
  azurerm_container_group: 'Container',
  azurerm_container_registry: 'Container',
  azurerm_container_registry_webhook: 'Container',
  azurerm_container_service: 'Container',
  azurerm_cosmosdb_account: 'CosmosDB',
  azurerm_cosmosdb_cassandra_keyspace: 'CosmosDB',
  azurerm_cosmosdb_gremlin_database: 'CosmosDB',
  azurerm_cosmosdb_gremlin_graph: 'CosmosDB',
  azurerm_cosmosdb_mongo_collection: 'CosmosDB',
  azurerm_cosmosdb_mongo_database: 'CosmosDB',
  azurerm_cosmosdb_sql_container: 'CosmosDB',
  azurerm_cosmosdb_sql_database: 'CosmosDB',
  azurerm_cosmosdb_table: 'CosmosDB',
  azurerm_dashboard: 'Portal',
  azurerm_data_factory: 'Data Factory',
  azurerm_data_factory_dataset_mysql: 'Data Factory',
  azurerm_data_factory_dataset_postgresql: 'Data Factory',
  azurerm_data_factory_dataset_sql_server_table: 'Data Factory',
  azurerm_data_factory_integration_runtime_managed: 'Data Factory',
  azurerm_data_factory_linked_service_data_lake_storage_gen2: 'Data Factory',
  azurerm_data_factory_linked_service_mysql: 'Data Factory',
  azurerm_data_factory_linked_service_postgresql: 'Data Factory',
  azurerm_data_factory_linked_service_sql_server: 'Data Factory',
  azurerm_data_factory_pipeline: 'Data Factory',
  azurerm_data_factory_trigger_schedule: 'Data Factory',
  azurerm_data_lake_analytics_account: 'Data Lake',
  azurerm_data_lake_analytics_firewall_rule: 'Data Lake',
  azurerm_data_lake_store: 'Data Lake',
  azurerm_data_lake_store_file: 'Data Lake',
  azurerm_data_lake_store_firewall_rule: 'Data Lake',
  azurerm_databricks_workspace: 'Databricks',
  azurerm_ddos_protection_plan: 'Network',
  azurerm_dedicated_host_group: 'Compute',
  azurerm_dev_test_lab: 'Dev Test',
  azurerm_dev_test_linux_virtual_machine: 'Dev Test',
  azurerm_dev_test_policy: 'Dev Test',
  azurerm_dev_test_schedule: 'Dev Test',
  azurerm_dev_test_virtual_network: 'Dev Test',
  azurerm_dev_test_windows_virtual_machine: 'Dev Test',
  azurerm_devspace_controller: 'DevSpace',
  azurerm_disk_encryption_set: 'Compute',
  azurerm_dns_a_record: 'DNS',
  azurerm_dns_aaaa_record: 'DNS',
  azurerm_dns_caa_record: 'DNS',
  azurerm_dns_cname_record: 'DNS',
  azurerm_dns_mx_record: 'DNS',
  azurerm_dns_ns_record: 'DNS',
  azurerm_dns_ptr_record: 'DNS',
  azurerm_dns_srv_record: 'DNS',
  azurerm_dns_txt_record: 'DNS',
  azurerm_dns_zone: 'DNS',
  azurerm_eventgrid_domain: 'Messaging',
  azurerm_eventgrid_event_subscription: 'Messaging',
  azurerm_eventgrid_topic: 'Messaging',
  azurerm_eventhub: 'Messaging',
  azurerm_eventhub_authorization_rule: 'Messaging',
  azurerm_eventhub_consumer_group: 'Messaging',
  azurerm_eventhub_namespace: 'Messaging',
  azurerm_eventhub_namespace_authorization_rule: 'Messaging',
  azurerm_eventhub_namespace_disaster_recovery_config: 'Messaging',
  azurerm_express_route_circuit: 'Network',
  azurerm_express_route_circuit_authorization: 'Network',
  azurerm_express_route_circuit_peering: 'Network',
  azurerm_firewall: 'Network',
  azurerm_firewall_application_rule_collection: 'Network',
  azurerm_firewall_nat_rule_collection: 'Network',
  azurerm_firewall_network_rule_collection: 'Network',
  azurerm_front_door: 'Front Door',
  azurerm_front_door_firewall_policy: 'Front Door',
  azurerm_function_app: 'App Service',
  azurerm_hdinsight_hadoop_cluster: 'HDInsight',
  azurerm_hdinsight_hbase_cluster: 'HDInsight',
  azurerm_hdinsight_interactive_query_cluster: 'HDInsight',
  azurerm_hdinsight_kafka_cluster: 'HDInsight',
  azurerm_hdinsight_ml_services_cluster: 'HDInsight',
  azurerm_hdinsight_rserver_cluster: 'HDInsight',
  azurerm_hdinsight_spark_cluster: 'HDInsight',
  azurerm_hdinsight_storm_cluster: 'HDInsight',
  azurerm_healthcare_service: 'Healthcare',
  azurerm_image: 'Compute',
  azurerm_iothub: 'IoT Hub',
  azurerm_iothub_consumer_group: 'IoT Hub',
  azurerm_iothub_dps: 'IoT Hub',
  azurerm_iothub_dps_certificate: 'IoT Hub',
  azurerm_iothub_dps_shared_access_policy: 'IoT Hub',
  azurerm_iothub_endpoint_eventhub: 'Messaging',
  azurerm_iothub_endpoint_servicebus_queue: 'Messaging',
  azurerm_iothub_endpoint_servicebus_topic: 'Messaging',
  azurerm_iothub_endpoint_storage_container: 'Messaging',
  azurerm_iothub_fallback_route: 'Messaging',
  azurerm_iothub_route: 'Messaging',
  azurerm_iothub_shared_access_policy: 'IoT Hub',
  azurerm_key_vault: 'Key Vault',
  azurerm_key_vault_access_policy: 'Key Vault',
  azurerm_key_vault_certificate: 'Key Vault',
  azurerm_key_vault_key: 'Key Vault',
  azurerm_key_vault_secret: 'Key Vault',
  azurerm_kubernetes_cluster: 'Container',
  azurerm_kubernetes_cluster_node_pool: 'Container',
  azurerm_kusto_cluster: 'Data Explorer',
  azurerm_kusto_database: 'Data Explorer',
  azurerm_kusto_database_principal: 'Data Explorer',
  azurerm_kusto_eventhub_data_connection: 'Data Explorer',
  azurerm_linux_virtual_machine_scale_set: 'Beta',
  azurerm_loadbalancer: 'Load Balancer',
  azurerm_loadbalancer_backend_address_pool: 'Load Balancer',
  azurerm_loadbalancer_nat_pool: 'Load Balancer',
  azurerm_loadbalancer_nat_rule: 'Load Balancer',
  azurerm_loadbalancer_outbound_rule: 'Load Balancer',
  azurerm_loadbalancer_probe: 'Load Balancer',
  azurerm_loadbalancer_rule: 'Load Balancer',
  azurerm_local_network_gateway: 'Network',
  azurerm_log_analytics_linked_service: 'Log Analytics',
  azurerm_log_analytics_solution: 'Log Analytics',
  azurerm_log_analytics_workspace: 'Log Analytics',
  azurerm_log_analytics_workspace_linked_service: 'Log Analytics',
  azurerm_logic_app_action_custom: 'Logic App',
  azurerm_logic_app_action_http: 'Logic App',
  azurerm_logic_app_trigger_custom: 'Logic App',
  azurerm_logic_app_trigger_http_request: 'Logic App',
  azurerm_logic_app_trigger_recurrence: 'Logic App',
  azurerm_logic_app_workflow: 'Logic App',
  azurerm_managed_disk: 'Compute',
  azurerm_management_group: 'Management',
  azurerm_management_lock: 'Management',
  azurerm_maps_account: 'Maps',
  azurerm_mariadb_configuration: 'Database',
  azurerm_mariadb_database: 'Database',
  azurerm_mariadb_firewall_rule: 'Database',
  azurerm_mariadb_server: 'Database',
  azurerm_mariadb_virtual_network_rule: 'Database',
  azurerm_marketplace_agreement: 'Compute',
  azurerm_media_services_account: 'Media',
  azurerm_metric_alertrule: 'Monitor',
  azurerm_monitor_action_group: 'Monitor',
  azurerm_monitor_activity_log_alert: 'Monitor',
  azurerm_monitor_autoscale_setting: 'Monitor',
  azurerm_monitor_diagnostic_setting: 'Monitor',
  azurerm_monitor_log_profile: 'Monitor',
  azurerm_monitor_metric_alert: 'Monitor',
  azurerm_monitor_metric_alertrule: 'Monitor',
  azurerm_mssql_database_vulnerability_assessment_rule_baseline: 'Database',
  azurerm_mssql_elasticpool: 'Database',
  azurerm_mssql_server_security_alert_policy: 'Database',
  azurerm_mssql_server_vulnerability_assessment: 'Database',
  azurerm_mysql_configuration: 'Database',
  azurerm_mysql_database: 'Database',
  azurerm_mysql_firewall_rule: 'Database',
  azurerm_mysql_server: 'Database',
  azurerm_mysql_virtual_network_rule: 'Database',
  azurerm_nat_gateway: 'Network',
  azurerm_netapp_account: 'NetApp',
  azurerm_netapp_pool: 'NetApp',
  azurerm_netapp_snapshot: 'NetApp',
  azurerm_netapp_volume: 'NetApp',
  azurerm_network_connection_monitor: 'Network',
  azurerm_network_ddos_protection_plan: 'Network',
  azurerm_network_interface: 'Network',
  azurerm_network_interface_application_gateway_backend_address_pool_association: 'Network',
  azurerm_network_interface_application_security_group_association: 'Network',
  azurerm_network_interface_backend_address_pool_association: 'Network',
  azurerm_network_interface_nat_rule_association: 'Network',
  azurerm_network_packet_capture: 'Network',
  azurerm_network_profile: 'Network',
  azurerm_network_security_group: 'Network',
  azurerm_network_security_rule: 'Network',
  azurerm_network_watcher: 'Network',
  azurerm_network_watcher_flow_log: 'Network',
  azurerm_notification_hub: 'Messaging',
  azurerm_notification_hub_authorization_rule: 'Messaging',
  azurerm_notification_hub_namespace: 'Messaging',
  azurerm_packet_capture: 'Network',
  azurerm_point_to_site_vpn_gateway: 'Network',
  azurerm_policy_assignment: 'Policy',
  azurerm_policy_definition: 'Policy',
  azurerm_policy_set_definition: 'Policy',
  azurerm_postgresql_configuration: 'Database',
  azurerm_postgresql_database: 'Database',
  azurerm_postgresql_firewall_rule: 'Database',
  azurerm_postgresql_server: 'Database',
  azurerm_postgresql_virtual_network_rule: 'Database',
  azurerm_private_dns_a_record: 'Private DNS',
  azurerm_private_dns_aaaa_record: 'Private DNS',
  azurerm_private_dns_cname_record: 'Private DNS',
  azurerm_private_dns_mx_record: 'Private DNS',
  azurerm_private_dns_ptr_record: 'Private DNS',
  azurerm_private_dns_srv_record: 'Private DNS',
  azurerm_private_dns_zone: 'Private DNS',
  azurerm_private_dns_zone_virtual_network_link: 'Private DNS',
  azurerm_private_endpoint: 'Network',
  azurerm_private_link_endpoint: 'Network',
  azurerm_private_link_service: 'Network',
  azurerm_proximity_placement_group: 'Compute',
  azurerm_public_ip: 'Network',
  azurerm_public_ip_prefix: 'Network',
  azurerm_recovery_network_mapping: 'Recovery Services',
  azurerm_recovery_services_fabric: 'Recovery Services',
  azurerm_recovery_services_protected_vm: 'Recovery Services',
  azurerm_recovery_services_protection_container: 'Recovery Services',
  azurerm_recovery_services_protection_container_mapping: 'Recovery Services',
  azurerm_recovery_services_protection_policy_vm: 'Recovery Services',
  azurerm_recovery_services_replicated_vm: 'Recovery Services',
  azurerm_recovery_services_replication_policy: 'Recovery Services',
  azurerm_recovery_services_vault: 'Recovery Services',
  azurerm_redis_cache: 'Redis',
  azurerm_redis_firewall_rule: 'Redis',
  azurerm_relay_hybrid_connection: 'Messaging',
  azurerm_relay_namespace: 'Messaging',
  azurerm_resource_group: 'Base',
  azurerm_role_assignment: 'Authorization',
  azurerm_role_definition: 'Authorization',
  azurerm_route: 'Network',
  azurerm_route_table: 'Network',
  azurerm_scheduler_job: 'Scheduler',
  azurerm_scheduler_job_collection: 'Scheduler',
  azurerm_search_service: 'Search',
  azurerm_security_center_contact: 'Security Center',
  azurerm_security_center_subscription_pricing: 'Security Center',
  azurerm_security_center_workspace: 'Security Center',
  azurerm_service_fabric_cluster: 'Service Fabric',
  azurerm_servicebus_namespace: 'Messaging',
  azurerm_servicebus_namespace_authorization_rule: 'Messaging',
  azurerm_servicebus_queue: 'Messaging',
  azurerm_servicebus_queue_authorization_rule: 'Messaging',
  azurerm_servicebus_subscription: 'Messaging',
  azurerm_servicebus_subscription_rule: 'Messaging',
  azurerm_servicebus_topic: 'Messaging',
  azurerm_servicebus_topic_authorization_rule: 'Messaging',
  azurerm_shared_image: 'Compute',
  azurerm_shared_image_gallery: 'Compute',
  azurerm_shared_image_version: 'Compute',
  azurerm_signalr_service: 'Messaging',
  azurerm_site_recovery_fabric: 'Recovery Services',
  azurerm_site_recovery_network_mapping: 'Recovery Services',
  azurerm_site_recovery_protection_container: 'Recovery Services',
  azurerm_site_recovery_protection_container_mapping: 'Recovery Services',
  azurerm_site_recovery_replicated_vm: 'Recovery Services',
  azurerm_site_recovery_replication_policy: 'Recovery Services',
  azurerm_snapshot: 'Compute',
  azurerm_sql_active_directory_administrator: 'Database',
  azurerm_sql_database: 'Database',
  azurerm_sql_elasticpool: 'Database',
  azurerm_sql_failover_group: 'Database',
  azurerm_sql_firewall_rule: 'Database',
  azurerm_sql_server: 'Database',
  azurerm_sql_virtual_network_rule: 'Database',
  azurerm_storage_account: 'Storage',
  azurerm_storage_account_network_rules: 'Storage',
  azurerm_storage_blob: 'Storage',
  azurerm_storage_container: 'Storage',
  azurerm_storage_data_lake_gen2_filesystem: 'Storage',
  azurerm_storage_management_policy: 'Storage',
  azurerm_storage_queue: 'Storage',
  azurerm_storage_share: 'Storage',
  azurerm_storage_share_directory: 'Storage',
  azurerm_storage_table: 'Storage',
  azurerm_storage_table_entity: 'Storage',
  azurerm_stream_analytics_function_javascript_udf: 'Stream Analytics',
  azurerm_stream_analytics_job: 'Stream Analytics',
  azurerm_stream_analytics_output_blob: 'Stream Analytics',
  azurerm_stream_analytics_output_eventhub: 'Stream Analytics',
  azurerm_stream_analytics_output_mssql: 'Stream Analytics',
  azurerm_stream_analytics_output_servicebus_queue: 'Stream Analytics',
  azurerm_stream_analytics_output_servicebus_topic: 'Stream Analytics',
  azurerm_stream_analytics_reference_input_blob: 'Stream Analytics',
  azurerm_stream_analytics_stream_input_blob: 'Stream Analytics',
  azurerm_stream_analytics_stream_input_eventhub: 'Stream Analytics',
  azurerm_stream_analytics_stream_input_iothub: 'Stream Analytics',
  azurerm_subnet: 'Network',
  azurerm_subnet_nat_gateway_association: 'Network',
  azurerm_subnet_network_security_group_association: 'Network',
  azurerm_subnet_route_table_association: 'Network',
  azurerm_template_deployment: 'Template',
  azurerm_traffic_manager_endpoint: 'Network',
  azurerm_traffic_manager_profile: 'Network',
  azurerm_user_assigned_identity: 'Authorization',
  azurerm_virtual_hub: 'Network',
  azurerm_virtual_machine: 'Compute',
  azurerm_virtual_machine_data_disk_attachment: 'Compute',
  azurerm_virtual_machine_extension: 'Compute',
  azurerm_virtual_machine_scale_set: 'Compute',
  azurerm_virtual_machine_scale_set_extension: 'Beta',
  azurerm_virtual_network: 'Network',
  azurerm_virtual_network_gateway: 'Network',
  azurerm_virtual_network_gateway_connection: 'Network',
  azurerm_virtual_network_peering: 'Network',
  azurerm_virtual_wan: 'Network',
  azurerm_vpn_gateway: 'Network',
  azurerm_vpn_server_configuration: 'Network',
  azurerm_web_application_firewall_policy: 'Network',
  azurerm_windows_virtual_machine_scale_set: 'Beta',
  azurestack_availability_set: 'Compute',
  azurestack_dns_a_record: 'DNS',
  azurestack_dns_zone: 'DNS',
  azurestack_loadbalancer: 'Load Balancer',
  azurestack_loadbalancer_backend_address_pool: 'Load Balancer',
  azurestack_loadbalancer_nat_pool: 'Load Balancer',
  azurestack_loadbalancer_nat_rule: 'Load Balancer',
  azurestack_loadbalancer_probe: 'Load Balancer',
  azurestack_loadbalancer_rule: 'Load Balancer',
  azurestack_local_network_gateway: 'Network',
  azurestack_managed_disk: 'Compute',
  azurestack_network_interface: 'Network',
  azurestack_network_security_group: 'Network',
  azurestack_network_security_rule: 'Network',
  azurestack_public_ip: 'Network',
  azurestack_resource_group: 'Base',
  azurestack_route: 'Network',
  azurestack_route_table: 'Network',
  azurestack_storage_account: 'Storage',
  azurestack_storage_blob: 'Storage',
  azurestack_storage_container: 'Storage',
  azurestack_subnet: 'Network',
  azurestack_template_deployment: 'Template',
  azurestack_virtual_machine: 'Compute',
  azurestack_virtual_machine_extension: 'Compute',
  azurestack_virtual_machine_scale_set: 'Compute',
  azurestack_virtual_network: 'Network',
  azurestack_virtual_network_gateway: 'Network',
  azurestack_virtual_network_gateway_connection: 'Network',
  google_access_context_manager_access_level: 'Access Context Manager',
  google_access_context_manager_access_policy: 'Access Context Manager',
  google_access_context_manager_service_perimeter: 'Access Context Manager',
  google_app_engine_application: 'App Engine',
  google_app_engine_application_url_dispatch_rules: 'App Engine',
  google_app_engine_domain_mapping: 'App Engine',
  google_app_engine_firewall_rule: 'App Engine',
  google_app_engine_standard_app_version: 'App Engine',
  google_bigquery_data_transfer_config: 'BigQueryDataTransfer',
  google_bigquery_dataset: 'BigQuery',
  google_bigquery_table: 'BigQuery',
  google_bigtable_app_profile: 'Bigtable',
  google_bigtable_gc_policy: 'Bigtable',
  google_bigtable_instance: 'Bigtable',
  google_bigtable_instance_iam: 'Bigtable',
  google_bigtable_table: 'Bigtable',
  google_binary_authorization_attestor: 'Binary Authorization',
  google_binary_authorization_attestor_iam: 'Binary Authorization',
  google_binary_authorization_policy: 'Binary Authorization',
  google_cloud_run_domain_mapping: 'Cloud Run',
  google_cloud_run_service: 'Cloud Run',
  google_cloud_run_service_iam: 'Cloud Run',
  google_cloud_scheduler_job: 'Cloud Scheduler',
  google_cloud_tasks_queue: 'Cloud Tasks',
  google_cloudbuild_trigger: 'Cloud Build',
  google_cloudfunctions_cloud_function_iam: 'Cloud Functions',
  google_cloudfunctions_function: 'Cloud Functions',
  google_cloudiot_registry: 'Cloud IoT Core',
  google_composer_environment: 'Cloud Composer',
  google_compute_address: 'Compute Engine',
  google_compute_attached_disk: 'Compute Engine',
  google_compute_autoscaler: 'Compute Engine',
  google_compute_backend_bucket: 'Compute Engine',
  google_compute_backend_bucket_signed_url_key: 'Compute Engine',
  google_compute_backend_service: 'Compute Engine',
  google_compute_backend_service_signed_url_key: 'Compute Engine',
  google_compute_disk: 'Compute Engine',
  google_compute_disk_resource_policy_attachment: 'Compute Engine',
  google_compute_firewall: 'Compute Engine',
  google_compute_forwarding_rule: 'Compute Engine',
  google_compute_global_address: 'Compute Engine',
  google_compute_global_forwarding_rule: 'Compute Engine',
  google_compute_health_check: 'Compute Engine',
  google_compute_http_health_check: 'Compute Engine',
  google_compute_https_health_check: 'Compute Engine',
  google_compute_image: 'Compute Engine',
  google_compute_instance: 'Compute Engine',
  google_compute_instance_from_template: 'Compute Engine',
  google_compute_instance_group: 'Compute Engine',
  google_compute_instance_group_manager: 'Compute Engine',
  google_compute_instance_iam: 'Compute Engine',
  google_compute_instance_template: 'Compute Engine',
  google_compute_interconnect_attachment: 'Compute Engine',
  google_compute_network: 'Compute Engine',
  google_compute_network_endpoint: 'Compute Engine',
  google_compute_network_endpoint_group: 'Compute Engine',
  google_compute_network_peering: 'Compute Engine',
  google_compute_network_peering_routes_config: 'Compute Engine',
  google_compute_node_group: 'Compute Engine',
  google_compute_node_template: 'Compute Engine',
  google_compute_project_default_network_tier: 'Compute Engine',
  google_compute_project_metadata: 'Compute Engine',
  google_compute_project_metadata_item: 'Compute Engine',
  google_compute_region_autoscaler: 'Compute Engine',
  google_compute_region_backend_service: 'Compute Engine',
  google_compute_region_disk: 'Compute Engine',
  google_compute_region_health_check: 'Compute Engine',
  google_compute_region_instance_group_manager: 'Compute Engine',
  google_compute_reservation: 'Compute Engine',
  google_compute_resource_policy: 'Compute Engine',
  google_compute_route: 'Compute Engine',
  google_compute_router: 'Compute Engine',
  google_compute_router_bgp_peer: 'Compute Engine',
  google_compute_router_interface: 'Compute Engine',
  google_compute_router_nat: 'Compute Engine',
  google_compute_security_policy: 'Compute Engine',
  google_compute_shared_vpc_host_project: 'Compute Engine',
  google_compute_shared_vpc_service_project: 'Compute Engine',
  google_compute_snapshot: 'Compute Engine',
  google_compute_ssl_certificate: 'Compute Engine',
  google_compute_ssl_policy: 'Compute Engine',
  google_compute_subnetwork: 'Compute Engine',
  google_compute_subnetwork_iam: 'Compute Engine',
  google_compute_target_http_proxy: 'Compute Engine',
  google_compute_target_https_proxy: 'Compute Engine',
  google_compute_target_instance: 'Compute Engine',
  google_compute_target_pool: 'Compute Engine',
  google_compute_target_ssl_proxy: 'Compute Engine',
  google_compute_target_tcp_proxy: 'Compute Engine',
  google_compute_url_map: 'Compute Engine',
  google_compute_vpn_gateway: 'Compute Engine',
  google_compute_vpn_tunnel: 'Compute Engine',
  google_container_analysis_note: 'Container Registry',
  google_container_cluster: 'Kubernetes',
  google_container_node_pool: 'Kubernetes',
  google_dataflow_job: 'Dataflow',
  google_dataproc_autoscaling_policy: 'Cloud Dataproc',
  google_dataproc_cluster: 'Cloud Dataproc',
  google_dataproc_cluster_iam: 'Cloud Dataproc',
  google_dataproc_job: 'Cloud Dataproc',
  google_dataproc_job_iam: 'Cloud Dataproc',
  google_deployment_manager_deployment: 'Deployment Manager',
  google_dns_managed_zone: 'Cloud DNS',
  google_dns_record_set: 'Cloud DNS',
  google_endpoints_service: 'Cloud Endpoints',
  google_filestore_instance: 'Cloud Filestore',
  google_firestore_index: 'Cloud Firestore',
  google_google_billing_account_iam_binding: 'Cloud Platform',
  google_google_billing_account_iam_member: 'Cloud Platform',
  google_google_billing_account_iam_policy: 'Cloud Platform',
  google_google_folder: 'Cloud Platform',
  google_google_folder_iam_binding: 'Cloud Platform',
  google_google_folder_iam_member: 'Cloud Platform',
  google_google_folder_iam_policy: 'Cloud Platform',
  google_google_folder_organization_policy: 'Cloud Platform',
  google_google_kms_crypto_key_iam: 'Cloud KMS',
  google_google_kms_key_ring_iam: 'Cloud KMS',
  google_google_organization_iam_audit_config: 'Cloud Platform',
  google_google_organization_iam_binding: 'Cloud Platform',
  google_google_organization_iam_custom_role: 'Cloud Platform',
  google_google_organization_iam_member: 'Cloud Platform',
  google_google_organization_iam_policy: 'Cloud Platform',
  google_google_organization_policy: 'Cloud Platform',
  google_google_project: 'Cloud Platform',
  google_google_project_iam: 'Cloud Platform',
  google_google_project_iam_custom_role: 'Cloud Platform',
  google_google_project_organization_policy: 'Cloud Platform',
  google_google_project_service: 'Cloud Platform',
  google_google_service_account: 'Cloud Platform',
  google_google_service_account_iam: 'Cloud Platform',
  google_google_service_account_key: 'Cloud Platform',
  google_healthcare_dataset_iam: 'Cloud Healthcare',
  google_healthcare_dicom_store_iam: 'Cloud Healthcare',
  google_healthcare_fhir_store_iam: 'Cloud Healthcare',
  google_healthcare_hl7_v2_store_iam: 'Cloud Healthcare',
  google_iap_app_engine_service_iam: 'Identity-Aware Proxy',
  google_iap_app_engine_version_iam: 'Identity-Aware Proxy',
  google_iap_tunnel_instance_iam: 'Identity-Aware Proxy',
  google_iap_web_backend_service_iam: 'Identity-Aware Proxy',
  google_iap_web_iam: 'Identity-Aware Proxy',
  google_iap_web_type_app_engine_iam: 'Identity-Aware Proxy',
  google_iap_web_type_compute_iam: 'Identity-Aware Proxy',
  google_identity_platform_default_supported_idp_config: 'Identity Platform',
  google_identity_platform_inbound_saml_config: 'Identity Platform',
  google_identity_platform_oauth_idp_config: 'Identity Platform',
  google_identity_platform_tenant: 'Identity Platform',
  google_identity_platform_tenant_default_supported_idp_config: 'Identity Platform',
  google_identity_platform_tenant_inbound_saml_config: 'Identity Platform',
  google_identity_platform_tenant_oauth_idp_config: 'Identity Platform',
  google_kms_crypto_key: 'Cloud KMS',
  google_kms_key_ring: 'Cloud KMS',
  google_kms_secret_ciphertext: 'Cloud KMS',
  google_logging_billing_account_exclusion: 'Stackdriver Logging',
  google_logging_billing_account_sink: 'Stackdriver Logging',
  google_logging_folder_exclusion: 'Stackdriver Logging',
  google_logging_folder_sink: 'Stackdriver Logging',
  google_logging_metric: 'Stackdriver Logging',
  google_logging_organization_exclusion: 'Stackdriver Logging',
  google_logging_organization_sink: 'Stackdriver Logging',
  google_logging_project_exclusion: 'Stackdriver Logging',
  google_logging_project_sink: 'Stackdriver Logging',
  google_ml_engine_model: 'ML Engine',
  google_monitoring_alert_policy: 'Stackdriver Monitoring',
  google_monitoring_group: 'Stackdriver Monitoring',
  google_monitoring_notification_channel: 'Stackdriver Monitoring',
  google_monitoring_uptime_check_config: 'Stackdriver Monitoring',
  google_pubsub_subscription: 'Cloud Pub/Sub',
  google_pubsub_subscription_iam: 'Cloud Pub/Sub',
  google_pubsub_topic: 'Cloud Pub/Sub',
  google_pubsub_topic_iam: 'Cloud Pub/Sub',
  google_redis_instance: 'Cloud Memorystore',
  google_resource_manager_lien: 'Resource Manager',
  google_runtimeconfig_config: 'Cloud Runtime Configuration',
  google_runtimeconfig_config_iam: 'Cloud Runtime Configuration',
  google_runtimeconfig_variable: 'Cloud Runtime Configuration',
  google_scc_source: 'Cloud Security Command Center',
  google_service_networking_connection: 'Service Networking',
  google_sourcerepo_repository: 'Cloud Source Repositories',
  google_sourcerepo_repository_iam: 'Cloud Source Repositories',
  google_spanner_database: 'Cloud Spanner',
  google_spanner_database_iam: 'Cloud Spanner',
  google_spanner_instance: 'Cloud Spanner',
  google_spanner_instance_iam: 'Cloud Spanner',
  google_sql_database: 'Cloud SQL',
  google_sql_database_instance: 'Cloud SQL',
  google_sql_ssl_cert: 'Cloud SQL',
  google_sql_user: 'Cloud SQL',
  google_storage_bucket: 'Cloud Storage',
  google_storage_bucket_access_control: 'Cloud Storage',
  google_storage_bucket_acl: 'Cloud Storage',
  google_storage_bucket_iam: 'Cloud Storage',
  google_storage_bucket_object: 'Cloud Storage',
  google_storage_default_object_access_control: 'Cloud Storage',
  google_storage_default_object_acl: 'Cloud Storage',
  google_storage_notification: 'Cloud Storage',
  google_storage_object_access_control: 'Cloud Storage',
  google_storage_object_acl: 'Cloud Storage',
  google_storage_transfer_job: 'Cloud Storage',
  google_tpu_node: 'Cloud TPU',
  google_usage_export_bucket: 'Cloud Platform',
  oci_analytics_analytics_instance: 'Analytics',
  oci_apigateway_deployment: 'API Gateway',
  oci_apigateway_gateway: 'API Gateway',
  oci_audit_configuration: 'Audit',
  oci_autoscaling_auto_scaling_configuration: 'Auto Scaling',
  oci_budget_alert_rule: 'Budget',
  oci_budget_budget: 'Budget',
  oci_containerengine_cluster: 'Container Engine',
  oci_containerengine_node_pool: 'Container Engine',
  oci_core_app_catalog_listing_resource_version_agreement: 'Core',
  oci_core_app_catalog_subscription: 'Core',
  oci_core_boot_volume: 'Core',
  oci_core_boot_volume_backup: 'Core',
  oci_core_cluster_network: 'Core',
  oci_core_console_history: 'Core',
  oci_core_cpe: 'Core',
  oci_core_cross_connect: 'Core',
  oci_core_cross_connect_group: 'Core',
  oci_core_dedicated_vm_host: 'Core',
  oci_core_dhcp_options: 'Core',
  oci_core_drg: 'Core',
  oci_core_drg_attachment: 'Core',
  oci_core_image: 'Core',
  oci_core_instance: 'Core',
  oci_core_instance_configuration: 'Core',
  oci_core_instance_console_connection: 'Core',
  oci_core_instance_pool: 'Core',
  oci_core_internet_gateway: 'Core',
  oci_core_ipsec: 'Core',
  oci_core_ipsec_connection_tunnel_management: 'Core',
  oci_core_local_peering_gateway: 'Core',
  oci_core_nat_gateway: 'Core',
  oci_core_network_security_group: 'Core',
  oci_core_network_security_group_security_rule: 'Core',
  oci_core_private_ip: 'Core',
  oci_core_public_ip: 'Core',
  oci_core_remote_peering_connection: 'Core',
  oci_core_route_table: 'Core',
  oci_core_route_table_attachment: 'Core',
  oci_core_security_list: 'Core',
  oci_core_service_gateway: 'Core',
  oci_core_shape_management: 'Core',
  oci_core_subnet: 'Core',
  oci_core_vcn: 'Core',
  oci_core_virtual_circuit: 'Core',
  oci_core_vnic_attachment: 'Core',
  oci_core_volume: 'Core',
  oci_core_volume_attachment: 'Core',
  oci_core_volume_backup: 'Core',
  oci_core_volume_backup_policy: 'Core',
  oci_core_volume_backup_policy_assignment: 'Core',
  oci_core_volume_group: 'Core',
  oci_core_volume_group_backup: 'Core',
  oci_database_autonomous_container_database: 'Database',
  oci_database_autonomous_data_warehouse: 'Database',
  oci_database_autonomous_data_warehouse_backup: 'Database',
  oci_database_autonomous_database: 'Database',
  oci_database_autonomous_database_backup: 'Database',
  oci_database_autonomous_database_instance_wallet_management: 'Database',
  oci_database_autonomous_database_regional_wallet_management: 'Database',
  oci_database_autonomous_exadata_infrastructure: 'Database',
  oci_database_backup: 'Database',
  oci_database_backup_destination: 'Database',
  oci_database_data_guard_association: 'Database',
  oci_database_database: 'Database',
  oci_database_db_home: 'Database',
  oci_database_db_system: 'Database',
  oci_database_exadata_infrastructure: 'Database',
  oci_database_exadata_iorm_config: 'Database',
  oci_database_maintenance_run: 'Database',
  oci_database_vm_cluster: 'Database',
  oci_database_vm_cluster_network: 'Database',
  oci_dns_record: 'Dns',
  oci_dns_steering_policy: 'Dns',
  oci_dns_steering_policy_attachment: 'Dns',
  oci_dns_tsig_key: 'Dns',
  oci_dns_zone: 'Dns',
  oci_email_sender: 'Email',
  oci_email_suppression: 'Email',
  oci_events_rule: 'Events',
  oci_file_storage_export: 'File Storage',
  oci_file_storage_export_set: 'File Storage',
  oci_file_storage_file_system: 'File Storage',
  oci_file_storage_mount_target: 'File Storage',
  oci_file_storage_snapshot: 'File Storage',
  oci_functions_application: 'Functions',
  oci_functions_function: 'Functions',
  oci_functions_invoke_function: 'Functions',
  oci_health_checks_http_monitor: 'Health Checks',
  oci_health_checks_http_probe: 'Health Checks',
  oci_health_checks_ping_monitor: 'Health Checks',
  oci_health_checks_ping_probe: 'Health Checks',
  oci_identity_api_key: 'Identity',
  oci_identity_auth_token: 'Identity',
  oci_identity_authentication_policy: 'Identity',
  oci_identity_compartment: 'Identity',
  oci_identity_customer_secret_key: 'Identity',
  oci_identity_dynamic_group: 'Identity',
  oci_identity_group: 'Identity',
  oci_identity_identity_provider: 'Identity',
  oci_identity_idp_group_mapping: 'Identity',
  oci_identity_policy: 'Identity',
  oci_identity_smtp_credential: 'Identity',
  oci_identity_swift_password: 'Identity',
  oci_identity_tag: 'Identity',
  oci_identity_tag_default: 'Identity',
  oci_identity_tag_namespace: 'Identity',
  oci_identity_ui_password: 'Identity',
  oci_identity_user: 'Identity',
  oci_identity_user_capabilities_management: 'Identity',
  oci_identity_user_group_membership: 'Identity',
  oci_integration_integration_instance: 'Integration',
  oci_kms_encrypted_data: 'Kms',
  oci_kms_generated_key: 'Kms',
  oci_kms_key: 'Kms',
  oci_kms_key_version: 'Kms',
  oci_kms_vault: 'Kms',
  oci_limits_quota: 'Limits',
  oci_load_balancer_backend: 'Load Balancer',
  oci_load_balancer_backend_set: 'Load Balancer',
  oci_load_balancer_certificate: 'Load Balancer',
  oci_load_balancer_hostname: 'Load Balancer',
  oci_load_balancer_listener: 'Load Balancer',
  oci_load_balancer_load_balancer: 'Load Balancer',
  oci_load_balancer_path_route_set: 'Load Balancer',
  oci_load_balancer_rule_set: 'Load Balancer',
  oci_marketplace_accepted_agreement: 'Marketplace',
  oci_marketplace_listing_package_agreement: 'Marketplace',
  oci_monitoring_alarm: 'Monitoring',
  oci_objectstorage_bucket: 'Object Storage',
  oci_objectstorage_object: 'Object Storage',
  oci_objectstorage_object_lifecycle_policy: 'Object Storage',
  oci_objectstorage_preauthrequest: 'Object Storage',
  oci_oce_oce_instance: 'Content and Experience',
  oci_oda_oda_instance: 'Digital Assistant',
  oci_ons_notification_topic: 'Notifications',
  oci_ons_subscription: 'Notifications',
  oci_osmanagement_managed_instance_group: 'Osmanagement',
  oci_osmanagement_managed_instance_management: 'Osmanagement',
  oci_osmanagement_software_source: 'Osmanagement',
  oci_streaming_connect_harness: 'Streaming',
  oci_streaming_stream: 'Streaming',
  oci_streaming_stream_archiver: 'Streaming',
  oci_streaming_stream_pool: 'Streaming',
  oci_waas_address_list: 'Web Application Acceleration and Security',
  oci_waas_certificate: 'Web Application Acceleration and Security',
  oci_waas_custom_protection_rule: 'Web Application Acceleration and Security',
  oci_waas_http_redirect: 'Web Application Acceleration and Security',
  oci_waas_purge_cache: 'Web Application Acceleration and Security',
  oci_waas_waas_policy: 'Web Application Acceleration and Security',
  opc_opc_compute_acl: 'Compute Classic',
  opc_opc_compute_image_list: 'Compute Classic',
  opc_opc_compute_image_list_entry: 'Compute Classic',
  opc_opc_compute_instance: 'Compute Classic',
  opc_opc_compute_ip_address_association: 'Compute Classic',
  opc_opc_compute_ip_address_prefix_set: 'Compute Classic',
  opc_opc_compute_ip_address_reservation: 'Compute Classic',
  opc_opc_compute_ip_association: 'Compute Classic',
  opc_opc_compute_ip_network: 'Compute Classic',
  opc_opc_compute_ip_network_exchange: 'Compute Classic',
  opc_opc_compute_ip_reservation: 'Compute Classic',
  opc_opc_compute_machine_image: 'Compute Classic',
  opc_opc_compute_orchestrated_instance: 'Compute Classic',
  opc_opc_compute_route: 'Compute Classic',
  opc_opc_compute_sec_rule: 'Compute Classic',
  opc_opc_compute_security_application: 'Compute Classic',
  opc_opc_compute_security_association: 'Compute Classic',
  opc_opc_compute_security_ip_list: 'Compute Classic',
  opc_opc_compute_security_list: 'Compute Classic',
  opc_opc_compute_security_protocol: 'Compute Classic',
  opc_opc_compute_security_rule: 'Compute Classic',
  opc_opc_compute_ssh_key: 'Compute Classic',
  opc_opc_compute_storage_volume: 'Compute Classic',
  opc_opc_compute_storage_volume_attachment: 'Compute Classic',
  opc_opc_compute_storage_volume_snapshot: 'Compute Classic',
  opc_opc_compute_vnic_set: 'Compute Classic',
  opc_opc_compute_vpn_endpoint_v2: 'Compute Classic',
  opc_opc_lbaas_certificate: 'Load Balancer Classic',
  opc_opc_lbaas_listener: 'Load Balancer Classic',
  opc_opc_lbaas_load_balancer: 'Load Balancer Classic',
  opc_opc_lbaas_policy: 'Load Balancer Classic',
  opc_opc_lbaas_server_pool: 'Load Balancer Classic',
  opc_opc_storage_container: 'Object Storage Classic',
  opc_opc_storage_object: 'Object Storage Classic',
  oraclepaas_oraclepaas_application_container: 'PaaS',
  oraclepaas_oraclepaas_database_access_rule: 'PaaS',
  oraclepaas_oraclepaas_database_service_instance: 'PaaS',
  oraclepaas_oraclepaas_java_access_rule: 'PaaS',
  oraclepaas_oraclepaas_java_service_instance: 'PaaS',
  oraclepaas_oraclepaas_mysql_access_rule: 'PaaS',
  oraclepaas_oraclepaas_mysql_service_instance: 'PaaS',
  vsphere_compute_cluster: 'Host and Cluster Management',
  vsphere_compute_cluster_host_group: 'Host and Cluster Management',
  vsphere_compute_cluster_vm_affinity_rule: 'Host and Cluster Management',
  vsphere_compute_cluster_vm_anti_affinity_rule: 'Host and Cluster Management',
  vsphere_compute_cluster_vm_dependency_rule: 'Host and Cluster Management',
  vsphere_compute_cluster_vm_group: 'Host and Cluster Management',
  vsphere_compute_cluster_vm_host_rule: 'Host and Cluster Management',
  vsphere_custom_attribute: 'Inventory',
  vsphere_datacenter: 'Inventory',
  vsphere_datastore_cluster: 'Storage',
  vsphere_datastore_cluster_vm_anti_affinity_rule: 'Storage',
  vsphere_distributed_port_group: 'Networking',
  vsphere_distributed_virtual_switch: 'Networking',
  vsphere_dpm_host_override: 'Host and Cluster Management',
  vsphere_drs_vm_override: 'Host and Cluster Management',
  vsphere_file: 'Storage',
  vsphere_folder: 'Inventory',
  vsphere_ha_vm_override: 'Host and Cluster Management',
  vsphere_host: 'Host and Cluster Management',
  vsphere_host_port_group: 'Networking',
  vsphere_host_virtual_switch: 'Networking',
  vsphere_license: 'Administration',
  vsphere_nas_datastore: 'Storage',
  vsphere_resource_pool: 'Host and Cluster Management',
  vsphere_storage_drs_vm_override: 'Storage',
  vsphere_tag: 'Inventory',
  vsphere_tag_category: 'Inventory',
  vsphere_vapp_container: 'Virtual Machine',
  vsphere_vapp_entity: 'Virtual Machine',
  vsphere_virtual_disk: 'Virtual Machine',
  vsphere_virtual_machine: 'Virtual Machine',
  vsphere_virtual_machine_snapshot: 'Virtual Machine',
  vsphere_vmfs_datastore: 'Storage',
  vsphere_vnic: 'Host and Cluster Management'
};
